// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/turns": {
            "get": {
                "description": "Возвращает все ходы с фильтрацией по статусу и дате формирования",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ходы"
                ],
                "summary": "Получить все ходы",
                "parameters": [
                    {
                        "type": "string",
                        "description": "статус ходы",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "начальная дата формирования",
                        "name": "formation_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "конечная дата формирвания",
                        "name": "formation_date_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AllTurnsResponse"
                        }
                    }
                }
            }
        },
        "/api/turns/user_confirm": {
            "put": {
                "description": "Сформировать или удалить ход пользователем",
                "tags": [
                    "ходы"
                ],
                "summary": "Сформировать ход",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/turns/{turn_id}": {
            "get": {
                "description": "Возвращает подробную информацию о ходе и его типе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ходы"
                ],
                "summary": "Получить один ход",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id хода",
                        "name": "turn_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.turnResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Позволяет изменить тип хода и возвращает обновлённые данные",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ходы"
                ],
                "summary": "Указать тип хода",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id хода",
                        "name": "turn_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Тип хода",
                        "name": "turn_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.SwaggerUpdateTurnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.UpdateTurnResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет ход по id",
                "tags": [
                    "ходы"
                ],
                "summary": "Удалить ход",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id хода",
                        "name": "turn_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/turns/{turn_id}/delete_card/{card_id}": {
            "delete": {
                "description": "Удалить карту из хода",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ходы"
                ],
                "summary": "Удалить карту из хода",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id хода",
                        "name": "turn_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id карты",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AllCardsResponse"
                        }
                    }
                }
            }
        },
        "/api/turns/{turn_id}/moderator_confirm": {
            "put": {
                "description": "Подтвердить или отменить ход модератором",
                "tags": [
                    "ходы"
                ],
                "summary": "Подтвердить ход",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id хода",
                        "name": "turn_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "подтвердить",
                        "name": "confirm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/cards": {
            "get": {
                "description": "Возвращает всех доуступных ходов с опциональной фильтрацией по ФИО",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Карты"
                ],
                "summary": "Получить всех получателей",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ФИО для фильтрации",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.GetAllCardsResponse"
                        }
                    }
                }
            }
        },
        "/api/cards/": {
            "post": {
                "description": "Добавить новую карту",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Карты"
                ],
                "summary": "Добавить карту",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Изображение карты",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Имя",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Тип",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "НужноЕды",
                        "name": "needfood",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/cards/{card_id}": {
            "get": {
                "description": "Возвращает более подробную информацию об одной карте",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Карты"
                ],
                "summary": "Получить одну карту",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id карты",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.card"
                        }
                    }
                }
            },
            "put": {
                "description": "Изменить данные полей о карте",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Карты"
                ],
                "summary": "Изменить карту",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор карту",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Имя",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Тип",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "НужноЕды",
                        "name": "needFood",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Изображение карту",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Описание",
                        "name": "description",
                        "in": "formData"
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Удаляет карту по id",
                "tags": [
                    "Карты"
                ],
                "summary": "Удалить карту",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id карту",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/cards/{card_id}/add_to_turn": {
            "post": {
                "description": "Добавить выбраную карту в черновик хода",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Карты"
                ],
                "summary": "Добавить в ход",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id карту",
                        "name": "card_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AddToTurnResp"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Авторизует пользователя по логиню, паролю и отдаёт jwt токен для дальнейших запросов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Авторизация",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "user_credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SwaggerLoginResp"
                        }
                    }
                }
            }
        },
        "/api/user/loguot": {
            "post": {
                "description": "Выход из аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Выйти из аккаунта",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/sign_up": {
            "post": {
                "description": "Регистрация нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Регистрация",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "user_credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.RegisterResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.SwaggerUpdateturnRequest": {
            "type": "object",
            "properties": {
                "turn_type": {
                    "type": "string"
                }
            }
        },
        "ds.card": {
            "type": "object",
            "required": [
                "type",
                "needFood",
                "description",
                "name"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "needFood": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.AddToTurnResp": {
            "type": "object",
            "properties": {
                "card_count": {
                    "type": "integer"
                }
            }
        },
        "schemes.AllTurnsResponse": {
            "type": "object",
            "properties": {
                "turns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemes.turnOutput"
                    }
                }
            }
        },
        "schemes.AllCardsResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.card"
                    }
                }
            }
        },
        "schemes.GetAllCardsResponse": {
            "type": "object",
            "properties": {
                "draft_turn": {
                    "$ref": "#/definitions/schemes.turnshort"
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.card"
                    }
                }
            }
        },
        "schemes.LoginReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 30
                },
                "password": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "schemes.turnOutput": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "moderator": {
                    "type": "string"
                },
                "turn_phase": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.turnResponse": {
            "type": "object",
            "properties": {
                "turn": {
                    "$ref": "#/definitions/schemes.turnOutput"
                },
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.card"
                    }
                }
            }
        },
        "schemes.turnshort": {
            "type": "object",
            "properties": {
                "card_count": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.RegisterReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 30
                },
                "password": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "schemes.RegisterResp": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "schemes.SwaggerLoginResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "schemes.UpdateturnResponse": {
            "type": "object",
            "properties": {
                "turns": {
                    "$ref": "#/definitions/schemes.turnOutput"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:80",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Electronic turns",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}